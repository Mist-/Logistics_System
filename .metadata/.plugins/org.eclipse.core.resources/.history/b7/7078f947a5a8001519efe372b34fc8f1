package businesslogic.impl.transfer.hall;

import java.rmi.RemoteException;
import java.util.ArrayList;

import businesslogic.impl.user.InstitutionInfo;
import businesslogic.service.Transfer.hall.ReceiveMoneyService;
import utils.Timestamper;
import data.message.ResultMessage;
import data.po.AccountPO;
import data.po.OrderPO;
import data.po.ReceiptPO;
import data.po.StaffPO;
import data.service.CompanyDataService;
import data.service.FinancialDataService;
import data.vo.ReceiptVO;

/**
 * øÏµ›‘±Ω·À„
 * @author xu
 *
 */
public class ReceiveMoney implements ReceiveMoneyService{

	long hallID;
	Sender sender;
	
	ArrayList<StaffPO> senders;
	ReceiptPO receipt;


	public String[] getSenders(long hall){
		try {
			return sender.getAvailableSender();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public ReceiptVO chooseSender(String name){
		for(StaffPO s:senders){
			if(s.getName().equals(name))
				sender = s;
		}
		
		ArrayList<OrderPO> orders = new ArrayList<>();
		long[] orderNum = new long[orders.size()];
		double all = 0;
		for(int i = 0 ; i < orders.size();i++){
			OrderPO o = orders.get(i);
			orderNum[i] = o.getSerialNum();
			all += o.getFee();
		}
		receipt = new ReceiptPO();
		receipt.setSender(sender.getName());
		receipt.setMoney(account.getMoney()+all);
		ReceiptVO rec = new ReceiptVO();
		rec.setAddress(receipt.getInstitution());
		rec.setDate(receipt.getDate());
		rec.setInstitution(receipt.getInstitution());
		rec.setMoney(receipt.getMoney());
		rec.setSender(receipt.getSender());
		rec.setPeople(receipt.getSender());
		return rec;

	}
	
	public ResultMessage receiveMoney(){
		return ResultMessage.SUCCESS;
	}
	
	public ReceiveMoney(long hallID){
		this.hallID = hallID;
	}
}
